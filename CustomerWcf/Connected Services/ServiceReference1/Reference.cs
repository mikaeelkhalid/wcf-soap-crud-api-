//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CustomerWcf.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/CustomerWcf")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activeDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerRankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ntnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountNo {
            get {
                return this.accountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.accountNoField, value) != true)) {
                    this.accountNoField = value;
                    this.RaisePropertyChanged("accountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string activeData {
            get {
                return this.activeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.activeDataField, value) != true)) {
                    this.activeDataField = value;
                    this.RaisePropertyChanged("activeData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerRank {
            get {
                return this.customerRankField;
            }
            set {
                if ((object.ReferenceEquals(this.customerRankField, value) != true)) {
                    this.customerRankField = value;
                    this.RaisePropertyChanged("customerRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerStatus {
            get {
                return this.customerStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.customerStatusField, value) != true)) {
                    this.customerStatusField = value;
                    this.RaisePropertyChanged("customerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerType {
            get {
                return this.customerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.customerTypeField, value) != true)) {
                    this.customerTypeField = value;
                    this.RaisePropertyChanged("customerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ntn {
            get {
                return this.ntnField;
            }
            set {
                if ((object.ReferenceEquals(this.ntnField, value) != true)) {
                    this.ntnField = value;
                    this.RaisePropertyChanged("ntn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetAllCustomerResponse")]
        CustomerWcf.ServiceReference1.Customer[] GetAllCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllCustomer", ReplyAction="http://tempuri.org/ICustomerService/GetAllCustomerResponse")]
        System.Threading.Tasks.Task<CustomerWcf.ServiceReference1.Customer[]> GetAllCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/InsertCustomer", ReplyAction="http://tempuri.org/ICustomerService/InsertCustomerResponse")]
        CustomerWcf.ServiceReference1.Customer InsertCustomer(CustomerWcf.ServiceReference1.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/InsertCustomer", ReplyAction="http://tempuri.org/ICustomerService/InsertCustomerResponse")]
        System.Threading.Tasks.Task<CustomerWcf.ServiceReference1.Customer> InsertCustomerAsync(CustomerWcf.ServiceReference1.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        string DeleteCustomer(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<string> DeleteCustomerAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerById", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByIdResponse")]
        CustomerWcf.ServiceReference1.Customer[] GetCustomerById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerById", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<CustomerWcf.ServiceReference1.Customer[]> GetCustomerByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        CustomerWcf.ServiceReference1.Customer UpdateCustomer(CustomerWcf.ServiceReference1.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<CustomerWcf.ServiceReference1.Customer> UpdateCustomerAsync(CustomerWcf.ServiceReference1.Customer c);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : CustomerWcf.ServiceReference1.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<CustomerWcf.ServiceReference1.ICustomerService>, CustomerWcf.ServiceReference1.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CustomerWcf.ServiceReference1.Customer[] GetAllCustomer() {
            return base.Channel.GetAllCustomer();
        }
        
        public System.Threading.Tasks.Task<CustomerWcf.ServiceReference1.Customer[]> GetAllCustomerAsync() {
            return base.Channel.GetAllCustomerAsync();
        }
        
        public CustomerWcf.ServiceReference1.Customer InsertCustomer(CustomerWcf.ServiceReference1.Customer c) {
            return base.Channel.InsertCustomer(c);
        }
        
        public System.Threading.Tasks.Task<CustomerWcf.ServiceReference1.Customer> InsertCustomerAsync(CustomerWcf.ServiceReference1.Customer c) {
            return base.Channel.InsertCustomerAsync(c);
        }
        
        public string DeleteCustomer(string id) {
            return base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCustomerAsync(string id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public CustomerWcf.ServiceReference1.Customer[] GetCustomerById(string id) {
            return base.Channel.GetCustomerById(id);
        }
        
        public System.Threading.Tasks.Task<CustomerWcf.ServiceReference1.Customer[]> GetCustomerByIdAsync(string id) {
            return base.Channel.GetCustomerByIdAsync(id);
        }
        
        public CustomerWcf.ServiceReference1.Customer UpdateCustomer(CustomerWcf.ServiceReference1.Customer c) {
            return base.Channel.UpdateCustomer(c);
        }
        
        public System.Threading.Tasks.Task<CustomerWcf.ServiceReference1.Customer> UpdateCustomerAsync(CustomerWcf.ServiceReference1.Customer c) {
            return base.Channel.UpdateCustomerAsync(c);
        }
    }
}
